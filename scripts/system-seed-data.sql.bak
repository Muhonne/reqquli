-- ============================================================================
-- REQQULI SYSTEM REQUIREMENTS SEED DATA
-- ============================================================================
-- This file contains the actual requirements and test cases for the reqquli
-- Requirements Management System itself, documenting its functionality.
-- ============================================================================

-- Clear existing system data (preserves user accounts)
BEGIN;

-- Ensure admin user exists for foreign key constraints
-- Password is 'admin123' (hashed with bcrypt)
INSERT INTO users (id, email, password_hash, full_name, email_verified, created_at) VALUES
    ('11111111-1111-1111-1111-111111111111', 'admin@quire.com', '$2b$10$wfdJ6H6GSR41wtAVsqLlae7O9kkIOUKFqCX4EnAreyjV0EfHcAPn2', 'Admin User', true, NOW())
ON CONFLICT (id) DO NOTHING;

-- Clear traces first (foreign key constraints)
DELETE FROM traces WHERE
  from_requirement_id LIKE 'UR-Q%' OR to_requirement_id LIKE 'UR-Q%' OR
  from_requirement_id LIKE 'SR-Q%' OR to_requirement_id LIKE 'SR-Q%' OR
  from_requirement_id LIKE 'TC-Q%' OR to_requirement_id LIKE 'TC-Q%';

-- Clear test data
DELETE FROM testing.test_results WHERE test_case_id IN (
  SELECT id FROM testing.test_cases WHERE id LIKE 'TC-Q%'
);
DELETE FROM testing.test_step_results WHERE test_run_case_id IN (
  SELECT id FROM testing.test_run_cases WHERE test_case_id IN (
    SELECT id FROM testing.test_cases WHERE id LIKE 'TC-Q%'
  )
);
DELETE FROM testing.test_run_cases WHERE test_case_id IN (
  SELECT id FROM testing.test_cases WHERE id LIKE 'TC-Q%'
);
DELETE FROM testing.test_steps WHERE test_case_id IN (
  SELECT id FROM testing.test_cases WHERE id LIKE 'TC-Q%'
);
DELETE FROM testing.test_cases WHERE id LIKE 'TC-Q%';

-- Clear requirements
DELETE FROM system_requirements WHERE id LIKE 'SR-Q%';
DELETE FROM user_requirements WHERE id LIKE 'UR-Q%';

-- ============================================================================
-- USER REQUIREMENTS
-- ============================================================================

INSERT INTO user_requirements (id, title, description, status, revision, created_by, modified_by, created_at, last_modified) VALUES
-- Authentication & User Management
('UR-Q001', 'QUIRE: User Authentication',
 'The system shall provide secure user authentication with email/password login, JWT token management, and session handling',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q002', 'QUIRE: User Registration',
 'The system shall allow new users to register with email verification and password requirements',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q003', 'QUIRE: Session Management',
 'The system shall manage user sessions with automatic token refresh and secure logout capabilities',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Requirements Management
('UR-Q004', 'QUIRE: User Requirements Management',
 'The system shall provide full CRUD operations for user requirements with versioning and approval workflow',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q005', 'QUIRE: System Requirements Management',
 'The system shall provide full CRUD operations for system requirements with versioning and approval workflow',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q006', 'QUIRE: Requirements Approval Workflow',
 'The system shall enforce an approval workflow requiring password confirmation and tracking approver information',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q007', 'QUIRE: Requirements Versioning',
 'The system shall track requirement revisions and increment version numbers upon approval',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Traceability
('UR-Q008', 'QUIRE: Requirements Traceability',
 'The system shall provide bidirectional traceability between user requirements, system requirements, and test cases',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q009', 'QUIRE: Traceability Visualization',
 'The system shall provide visual representations of traceability relationships using interactive diagrams',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q010', 'QUIRE: Trace Management',
 'The system shall allow users to create, view, and delete trace relationships between requirements',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Testing
('UR-Q011', 'QUIRE: Test Case Management',
 'The system shall provide full CRUD operations for test cases with approval workflow',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q012', 'QUIRE: Test Execution',
 'The system shall support manual test execution with step-by-step result recording',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q013', 'QUIRE: Evidence Management',
 'The system shall support file uploads as evidence for test step execution',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- UI/UX
('UR-Q014', 'QUIRE: Responsive Interface',
 'The system shall provide a responsive web interface that works on desktop and tablet devices',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q015', 'QUIRE: Search and Filter',
 'The system shall provide search and filtering capabilities for all requirement types',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q016', 'QUIRE: Data Export',
 'The system shall support data export in multiple formats for reporting and analysis',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Data Management
('UR-Q017', 'QUIRE: Audit Trail',
 'The system shall maintain an audit trail of all requirement changes and approvals',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q018', 'QUIRE: Soft Delete',
 'The system shall implement soft delete for requirements to maintain data integrity',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('UR-Q019', 'QUIRE: Sequential ID Generation',
 'The system shall generate sequential IDs for requirements in format UR-N, SR-N, TC-N',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW());

-- ============================================================================
-- SYSTEM REQUIREMENTS
-- ============================================================================

INSERT INTO system_requirements (id, title, description, status, revision, created_by, modified_by, created_at, last_modified) VALUES
-- Authentication System Requirements
('SR-Q001', 'QUIRE: JWT Authentication Implementation',
 'Implement JWT-based authentication with access and refresh tokens, 4-hour access token expiry, 7-day refresh token expiry',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q002', 'QUIRE: Password Hashing',
 'Implement bcrypt password hashing with salt rounds of 10',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q003', 'QUIRE: Email Verification Service',
 'Implement email verification token generation and validation with 24-hour expiry',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q004', 'QUIRE: Token Blacklist Management',
 'Implement token blacklist table for logout functionality and token invalidation',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q005', 'QUIRE: Cookie Security',
 'Implement secure httpOnly cookies with SameSite=strict and 4-hour expiry',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Requirements Management System Requirements
('SR-Q006', 'QUIRE: User Requirements API',
 'Implement RESTful API endpoints for user requirements CRUD operations with pagination and filtering',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q007', 'QUIRE: System Requirements API',
 'Implement RESTful API endpoints for system requirements CRUD operations with pagination and filtering',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q008', 'QUIRE: Approval Workflow Engine',
 'Implement approval workflow with password confirmation, status transitions, and revision increment',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q009', 'QUIRE: Sequential ID Generator',
 'Implement PostgreSQL sequences for requirement ID generation with format prefixes',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Traceability System Requirements
('SR-Q010', 'QUIRE: Traces Junction Table',
 'Implement many-to-many traces table with from/to relationships and type tracking',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q011', 'QUIRE: Trace Management API',
 'Implement API endpoints for creating, reading, and deleting trace relationships',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q012', 'QUIRE: D3.js Sankey Visualization',
 'Implement D3.js-based Sankey diagram for traceability visualization with hover effects',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q013', 'QUIRE: Trace Edit Modal',
 'Implement React modal component for managing trace relationships with search functionality',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Testing System Requirements
('SR-Q014', 'QUIRE: Test Case Database Schema',
 'Implement test_cases and test_steps tables with approval workflow support',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q015', 'QUIRE: Test Execution API',
 'Implement API endpoints for test run execution and step result recording',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q016', 'QUIRE: Evidence File Upload',
 'Implement file upload with multer, 10MB limit, checksum validation, and secure storage',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- UI Components System Requirements
('SR-Q017', 'QUIRE: React Component Architecture',
 'Implement atomic design pattern with atoms, molecules, organisms, and templates',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q018', 'QUIRE: Zustand State Management',
 'Implement Zustand stores for authentication, requirements, and test management',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q019', 'QUIRE: Tailwind CSS Styling',
 'Implement Tailwind CSS v4 with custom color palette and responsive design',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Data Management System Requirements
('SR-Q020', 'QUIRE: PostgreSQL Connection Pool',
 'Implement connection pooling with max 20 connections and idle timeout',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q021', 'QUIRE: Database Indexes',
 'Implement indexes on status, created_by fields and partial indexes for soft delete',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('SR-Q022', 'QUIRE: Error Handling Middleware',
 'Implement Express error handling middleware with logging and sanitized responses',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW());

-- ============================================================================
-- TEST CASES
-- ============================================================================

INSERT INTO testing.test_cases (id, title, description, status, revision, created_by, modified_by, created_at, last_modified) VALUES
-- Authentication Test Cases
('TC-Q001', 'QUIRE: User Login Test',
 'Verify user can login with valid email and password',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q002', 'QUIRE: User Registration Test',
 'Verify new user can register and receive email verification',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q003', 'QUIRE: Token Refresh Test',
 'Verify JWT tokens refresh automatically before expiry',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q004', 'QUIRE: Logout Test',
 'Verify user logout invalidates tokens and clears cookies',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Requirements Management Test Cases
('TC-Q005', 'QUIRE: Create User Requirement Test',
 'Verify user can create a new user requirement with sequential ID',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q006', 'QUIRE: Edit Requirement Test',
 'Verify editing approved requirement reverts to draft status',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q007', 'QUIRE: Approve Requirement Test',
 'Verify requirement approval with password confirmation increments revision',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q008', 'QUIRE: Delete Requirement Test',
 'Verify soft delete sets deleted_at timestamp without removing data',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Traceability Test Cases
('TC-Q009', 'QUIRE: Create Trace Link Test',
 'Verify creating trace between user and system requirements',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q010', 'QUIRE: View Traceability Matrix Test',
 'Verify traceability visualization displays correct relationships',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q011', 'QUIRE: Delete Trace Link Test',
 'Verify removing trace relationship between requirements',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- Testing Test Cases
('TC-Q012', 'QUIRE: Create Test Case Test',
 'Verify creating test case with steps',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q013', 'QUIRE: Execute Test Run Test',
 'Verify test execution with step-by-step result recording',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q014', 'QUIRE: Upload Evidence Test',
 'Verify file upload as test step evidence',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

-- UI/UX Test Cases
('TC-Q015', 'QUIRE: Search Requirements Test',
 'Verify search functionality filters requirements correctly',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q016', 'QUIRE: Pagination Test',
 'Verify pagination works with 20 items per page',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW()),

('TC-Q017', 'QUIRE: Export Data Test',
 'Verify data export functionality for requirements',
 'approved', 1, '11111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', NOW(), NOW());

-- ============================================================================
-- TEST STEPS
-- ============================================================================

-- TC-Q001: User Login Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q001', 1, 'Navigate to login page', 'Login form is displayed'),
('TC-Q001', 2, 'Enter valid email and password', 'Credentials are accepted'),
('TC-Q001', 3, 'Click login button', 'User is redirected to dashboard'),
('TC-Q001', 4, 'Verify JWT token in cookies', 'Token is present and valid');

-- TC-Q002: User Registration Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q002', 1, 'Navigate to registration page', 'Registration form is displayed'),
('TC-Q002', 2, 'Enter valid email, name, and password', 'Form validates inputs'),
('TC-Q002', 3, 'Submit registration form', 'Account is created and verification email sent'),
('TC-Q002', 4, 'Click verification link in email', 'Email is verified and user can login');

-- TC-Q005: Create User Requirement Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q005', 1, 'Navigate to User Requirements page', 'Requirements list is displayed'),
('TC-Q005', 2, 'Click "New Requirement" button', 'Create form opens'),
('TC-Q005', 3, 'Enter title and description', 'Form accepts input'),
('TC-Q005', 4, 'Submit form', 'Requirement created with sequential ID (UR-N)'),
('TC-Q005', 5, 'Verify in requirements list', 'New requirement appears in draft status');

-- TC-Q007: Approve Requirement Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q007', 1, 'Select draft requirement', 'Requirement details displayed'),
('TC-Q007', 2, 'Click "Approve" button', 'Password confirmation modal appears'),
('TC-Q007', 3, 'Enter password and approval notes', 'Password is validated'),
('TC-Q007', 4, 'Confirm approval', 'Status changes to approved, revision increments');

-- TC-Q009: Create Trace Link Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q009', 1, 'Open user requirement details', 'Requirement with trace section displayed'),
('TC-Q009', 2, 'Click "Edit Traces" button', 'Trace edit modal opens'),
('TC-Q009', 3, 'Search and select system requirement', 'System requirement added to selection'),
('TC-Q009', 4, 'Save trace relationship', 'Trace created and displayed in requirement');

-- TC-Q010: View Traceability Matrix Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q010', 1, 'Navigate to Traceability page', 'Sankey diagram is displayed'),
('TC-Q010', 2, 'Hover over requirement node', 'Connected nodes are highlighted'),
('TC-Q010', 3, 'Click on requirement node', 'Navigate to requirement details'),
('TC-Q010', 4, 'Verify trace paths', 'All relationships correctly visualized');

-- TC-Q013: Execute Test Run Test Steps
INSERT INTO testing.test_steps (test_case_id, step_number, action, expected_result) VALUES
('TC-Q013', 1, 'Create new test run', 'Test run created with test cases'),
('TC-Q013', 2, 'Select test case to execute', 'Test execution modal opens'),
('TC-Q013', 3, 'Mark each step as pass/fail', 'Results are recorded'),
('TC-Q013', 4, 'Complete test execution', 'Overall result calculated and saved');

-- ============================================================================
-- TRACEABILITY LINKS
-- ============================================================================

INSERT INTO traces (from_requirement_id, to_requirement_id, from_type, to_type, created_by) VALUES
-- User to System Requirements Traces
('UR-Q001', 'SR-Q001', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q001', 'SR-Q002', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q001', 'SR-Q005', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q002', 'SR-Q003', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q003', 'SR-Q001', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q003', 'SR-Q004', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q004', 'SR-Q006', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q004', 'SR-Q009', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q005', 'SR-Q007', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q005', 'SR-Q009', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q006', 'SR-Q008', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q007', 'SR-Q008', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q008', 'SR-Q010', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q008', 'SR-Q011', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q009', 'SR-Q012', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q010', 'SR-Q011', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q010', 'SR-Q013', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q011', 'SR-Q014', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q012', 'SR-Q015', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q013', 'SR-Q016', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q014', 'SR-Q017', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q014', 'SR-Q019', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q015', 'SR-Q006', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q015', 'SR-Q007', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q017', 'SR-Q020', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q017', 'SR-Q021', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q018', 'SR-Q006', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q018', 'SR-Q007', 'user', 'system', '11111111-1111-1111-1111-111111111111'),
('UR-Q019', 'SR-Q009', 'user', 'system', '11111111-1111-1111-1111-111111111111'),

-- System Requirements to Test Cases Traces
('SR-Q001', 'TC-Q001', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q001', 'TC-Q003', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q002', 'TC-Q001', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q003', 'TC-Q002', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q004', 'TC-Q004', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q006', 'TC-Q005', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q007', 'TC-Q006', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q008', 'TC-Q007', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q006', 'TC-Q008', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q009', 'TC-Q005', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q010', 'TC-Q009', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q011', 'TC-Q009', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q011', 'TC-Q011', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q012', 'TC-Q010', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q013', 'TC-Q009', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q014', 'TC-Q012', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q015', 'TC-Q013', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q016', 'TC-Q014', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q006', 'TC-Q015', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q007', 'TC-Q015', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q006', 'TC-Q016', 'system', 'testcase', '11111111-1111-1111-1111-111111111111'),
('SR-Q007', 'TC-Q016', 'system', 'testcase', '11111111-1111-1111-1111-111111111111');

-- Note: sequences will continue from next available number

-- Display summary
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE '====================================';
  RAISE NOTICE 'QUIRE System Requirements Loaded';
  RAISE NOTICE '====================================';
  RAISE NOTICE 'User Requirements: 19';
  RAISE NOTICE 'System Requirements: 22';
  RAISE NOTICE 'Test Cases: 17';
  RAISE NOTICE 'Test Steps: 36';
  RAISE NOTICE 'Trace Links: 49';
  RAISE NOTICE '====================================';
END $$;

COMMIT;
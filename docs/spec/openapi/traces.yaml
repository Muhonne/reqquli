openapi: 3.0.3
paths:
  /traces:
    get:
      summary: Get all traces in the system
      description: Retrieve all trace relationships in the system, excluding traces where requirements are deleted
      tags:
        - Traces
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Traces retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  traces:
                    type: array
                    items:
                      $ref: '#/components/schemas/requirementTrace'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      summary: Create a new trace relationship
      description: Creates a trace relationship between two requirements using the traces junction table
      tags:
        - Traces
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTraceRequest'
      responses:
        '201':
          description: Trace relationship created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTraceResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '../common.yaml#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: One or both requirements not found

  /traces/{fromId}/{toId}:
    delete:
      summary: Delete a trace relationship
      description: Removes a trace relationship between two requirements from the traces junction table
      tags:
        - Traces
      security:
        - bearerAuth: []
      parameters:
        - name: fromId
          in: path
          required: true
          description: ID of the requirement that traces FROM
          schema:
            type: string
            pattern: '^(UR|SR|TC)-\d+$'
        - name: toId
          in: path
          required: true
          description: ID of the requirement that traces TO
          schema:
            type: string
            pattern: '^(UR|SR|TC)-\d+$'
      responses:
        '200':
          description: Trace relationship deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTraceResponse'
        '401':
          description: Unauthorized
        '404':
          description: Trace relationship not found

  /requirements/{id}/traces:
    get:
      summary: Get all traces for a requirement
      description: |
        Returns both upstream and downstream trace relationships for a requirement.
        Upstream traces are requirements that trace TO this requirement.
        Downstream traces are requirements that trace FROM this requirement.
      tags:
        - Traces
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: requirement ID (e.g., UR-1, SR-1)
          schema:
            type: string
            pattern: '^(UR|SR|TC)-\d+$'
      responses:
        '200':
          description: Trace relationships retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/requirementTracesResponse'
        '401':
          description: Unauthorized
        '404':
          description: requirement not found

components:
  schemas:
    CreateTraceRequest:
      type: object
      required:
        - fromId
        - toId
        - fromType
        - toType
      properties:
        fromId:
          type: string
          description: ID of the requirement that traces from (e.g., UR-1, TC-1)
          pattern: '^(UR|SR|TC)-\d+$'
        toId:
          type: string
          description: ID of the requirement that traces to (e.g., SR-1, TC-1)
          pattern: '^(UR|SR|TC)-\d+$'
        fromType:
          type: string
          enum: [user, system, testcase]
          description: Type of the from requirement
        toType:
          type: string
          enum: [user, system, testcase]
          description: Type of the to requirement

    CreateTraceResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        trace:
          $ref: '#/components/schemas/TraceRelationship'

    DeleteTraceResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Trace relationship deleted successfully

    TraceRelationship:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the trace relationship
        fromId:
          type: string
          description: ID of the requirement that traces from
        toId:
          type: string
          description: ID of the requirement that traces to
        fromType:
          type: string
          enum: [user, system, testcase]
        toType:
          type: string
          enum: [user, system, testcase]
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          format: uuid
        createdByName:
          type: string
          description: Display name of the user who created the trace

    requirementTrace:
      type: object
      properties:
        id:
          type: string
          description: requirement ID (e.g., UR-1, SR-1)
        title:
          type: string
          description: requirement title
        status:
          type: string
          enum: [draft, approved]
        type:
          type: string
          enum: [user, system, testcase]

    requirementTracesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        upstreamTraces:
          type: array
          description: requirements that trace TO this requirement
          items:
            $ref: '#/components/schemas/requirementTrace'
        downstreamTraces:
          type: array
          description: requirements that trace FROM this requirement
          items:
            $ref: '#/components/schemas/requirementTrace'